<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>org.testing.flink</groupId>
  <artifactId>SampleApp</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>SampleApp</name>
  <url>http://www.testing.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <repository>
      <id>apache.snapshots</id>
      <name>Apache Development Snapshot Repository</name>
      <url>https://repository.apache.org/content/repositories/snapshots/</url>
      <releases>
	<enabled>false</enabled>
      </releases>
      <snapshots>
	<enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  
  <!-- These two requirements are the minimum to use and develop Flink. 
       You can add others like <artifactId>flink-scala</artifactId> for Scala! -->
  <dependencies>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-java</artifactId>
      <version>0.9.0-milestone-1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-streaming-core</artifactId>
      <version>0.9.0-milestone-1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-streaming-connectors</artifactId>
      <version>0.9.0-milestone-1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-clients</artifactId>
      <version>0.9.0-milestone-1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-jdbc</artifactId>
      <version>0.9.0-milestone-1</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.4-1201-jdbc41</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      
      <!-- We use the maven-assembly plugin to create a fat jar that contains all dependencies
	   except flink and it's transitive dependencies. The resulting fat-jar can be executed
	   on a cluster. Change the value of Program-Class if your program entry point changes. -->
      <plugin>
	<artifactId>maven-assembly-plugin</artifactId>
	<version>2.4.1</version>
	<configuration>
	  <descriptors>
	    <descriptor>src/assembly/flink-fat-jar.xml</descriptor>
	  </descriptors>
	  <archive>
	    <manifest>
	      <mainClass>org.testing.flink.Job</mainClass>
	    </manifest>
	  </archive>
	</configuration>
	<executions>
	  <execution>
	    <id>make-assembly</id>
	    <phase>package</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      
      <!-- Configure the jar plugin to add the main class as a manifest entry -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jar-plugin</artifactId>
	<configuration>
	  <archive>
	    <manifestEntries>
	      <Main-Class>org.testing.flink.Job</Main-Class>
	    </manifestEntries>
	  </archive>
	</configuration>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>3.1</version>
	<configuration>
	  <source>1.6</source> <!-- If you want to use Java 8, change this to "1.8" -->
	  <target>1.6</target> <!-- If you want to use Java 8, change this to "1.8" -->
	</configuration>
      </plugin>
    </plugins>
		
    <pluginManagement>
      <plugins>
	<plugin>
	  <artifactId>maven-compiler-plugin</artifactId>
	  <configuration>
	    <source>1.8</source>
	    <target>1.8</target>
	    <compilerId>jdt</compilerId>
	  </configuration>
	  <dependencies>
	    <dependency>
	      <groupId>org.eclipse.tycho</groupId>
	      <artifactId>tycho-compiler-jdt</artifactId>
	      <version>0.21.0</version>
	    </dependency>
	  </dependencies>
	</plugin>
	
	<plugin>
	  <groupId>org.eclipse.m2e</groupId>
	  <artifactId>lifecycle-mapping</artifactId>
	  <version>1.0.0</version>
	  <configuration>
	    <lifecycleMappingMetadata>
	      <pluginExecutions>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-assembly-plugin</artifactId>
		    <versionRange>[2.4,)</versionRange>
		    <goals>
		      <goal>single</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <ignore/>
		  </action>
		</pluginExecution>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-compiler-plugin</artifactId>
		    <versionRange>[3.1,)</versionRange>
		    <goals>
		      <goal>testCompile</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <ignore/>
		  </action>
		</pluginExecution>
	      </pluginExecutions>
	    </lifecycleMappingMetadata>
	  </configuration>
	</plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
